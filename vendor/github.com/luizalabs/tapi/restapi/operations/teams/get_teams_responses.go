package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/luizalabs/tapi/models"
)

/*GetTeamsOK list of teams

swagger:response getTeamsOK
*/
type GetTeamsOK struct {

	// In: body
	Payload []*models.Team `json:"body,omitempty"`
}

// NewGetTeamsOK creates GetTeamsOK with default headers values
func NewGetTeamsOK() *GetTeamsOK {
	return &GetTeamsOK{}
}

// WithPayload adds the payload to the get teams o k response
func (o *GetTeamsOK) WithPayload(payload []*models.Team) *GetTeamsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get teams o k response
func (o *GetTeamsOK) SetPayload(payload []*models.Team) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetTeamsDefault Unexpected error

swagger:response getTeamsDefault
*/
type GetTeamsDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamsDefault creates GetTeamsDefault with default headers values
func NewGetTeamsDefault(code int) *GetTeamsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTeamsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get teams default response
func (o *GetTeamsDefault) WithStatusCode(code int) *GetTeamsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get teams default response
func (o *GetTeamsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get teams default response
func (o *GetTeamsDefault) WithPayload(payload *models.Error) *GetTeamsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get teams default response
func (o *GetTeamsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
