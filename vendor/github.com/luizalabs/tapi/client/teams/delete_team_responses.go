package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/luizalabs/tapi/models"
)

// DeleteTeamReader is a Reader for the DeleteTeam structure.
type DeleteTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeleteTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteTeamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDeleteTeamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewDeleteTeamNoContent creates a DeleteTeamNoContent with default headers values
func NewDeleteTeamNoContent() *DeleteTeamNoContent {
	return &DeleteTeamNoContent{}
}

/*DeleteTeamNoContent handles this case with default header values.

No content
*/
type DeleteTeamNoContent struct {
}

func (o *DeleteTeamNoContent) Error() string {
	return fmt.Sprintf("[DELETE /teams/{team_id}][%d] deleteTeamNoContent ", 204)
}

func (o *DeleteTeamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTeamDefault creates a DeleteTeamDefault with default headers values
func NewDeleteTeamDefault(code int) *DeleteTeamDefault {
	return &DeleteTeamDefault{
		_statusCode: code,
	}
}

/*DeleteTeamDefault handles this case with default header values.

Error
*/
type DeleteTeamDefault struct {
	_statusCode int

	Payload *models.GenericError
}

// Code gets the status code for the delete team default response
func (o *DeleteTeamDefault) Code() int {
	return o._statusCode
}

func (o *DeleteTeamDefault) Error() string {
	return fmt.Sprintf("[DELETE /teams/{team_id}][%d] deleteTeam default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTeamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
