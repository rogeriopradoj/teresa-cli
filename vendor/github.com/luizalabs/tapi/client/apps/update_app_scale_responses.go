package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/luizalabs/tapi/models"
)

// UpdateAppScaleReader is a Reader for the UpdateAppScale structure.
type UpdateAppScaleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *UpdateAppScaleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateAppScaleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUpdateAppScaleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewUpdateAppScaleOK creates a UpdateAppScaleOK with default headers values
func NewUpdateAppScaleOK() *UpdateAppScaleOK {
	return &UpdateAppScaleOK{}
}

/*UpdateAppScaleOK handles this case with default header values.

Updated version of the app
*/
type UpdateAppScaleOK struct {
	Payload *models.App
}

func (o *UpdateAppScaleOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{app_name}/scale][%d] updateAppScaleOK  %+v", 200, o.Payload)
}

func (o *UpdateAppScaleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppScaleDefault creates a UpdateAppScaleDefault with default headers values
func NewUpdateAppScaleDefault(code int) *UpdateAppScaleDefault {
	return &UpdateAppScaleDefault{
		_statusCode: code,
	}
}

/*UpdateAppScaleDefault handles this case with default header values.

Unexpected error
*/
type UpdateAppScaleDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update app scale default response
func (o *UpdateAppScaleDefault) Code() int {
	return o._statusCode
}

func (o *UpdateAppScaleDefault) Error() string {
	return fmt.Sprintf("[PUT /apps/{app_name}/scale][%d] updateAppScale default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAppScaleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateAppScaleBody update app scale body

swagger:model UpdateAppScaleBody
*/
type UpdateAppScaleBody struct {

	/* number of PODs running the app

	Required: true
	Minimum: 1
	*/
	Scale *int64 `json:"scale"`
}

// Validate validates this update app scale body
func (o *UpdateAppScaleBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateScale(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateAppScaleBody) validateScale(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"scale", "body", o.Scale); err != nil {
		return err
	}

	if err := validate.MinimumInt("body"+"."+"scale", "body", int64(*o.Scale), 1, false); err != nil {
		return err
	}

	return nil
}
